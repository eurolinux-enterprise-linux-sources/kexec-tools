.TH KDUMP.CONF 5 "07/23/2008" "kexec-tools"

.SH NAME
kdump.conf \- configuration file for kdump kernel.

.SH DESCRIPTION 

kdump.conf is a configuration file for the kdump kernel crash
collection service.

kdump.conf provides post-kexec instructions to the kdump kernel. It is
stored in the initrd file managed by the kdump service. If you change
this file and do not want to restart before it takes effect, restart
the kdump service to rebuild to initrd.

For most configurations, you can simply review the examples provided
in the stock /etc/kdump.conf.

.B NOTE: 
kdump.conf only affects the behavior of the initramfs.  Please read the
kdump operational flow section of kexec-kdump-howto.txt in the docs to better
understand how this configuration file affects the behavior of kdump.

.SH OPTIONS

.B path <path>
.RS
Append path to the filesystem device which you are dumping to.
Ignored for raw device dumps.  If unset, will default to /var/crash.
.RE

.B core_collector <command> <options>
.RS
This allows you to specify the command to copy the vmcore.
You could use the dump filtering program makedumpfile, the default one,
to retrieve your core, which on some arches can drastically reduce
core file size.  See /usr/sbin/makedumpfile --help for a list of options.
Note that the -i and -g options are not needed here, as the initrd
will automatically be populated with a config file appropriate
for the running kernel.

If you use other command as a core_collector, probably you also need
to provide its full path in extra_bins. Note, for ssh dump, scp
should be used instead of cp.
.RE

.B raw <partition>
.RS
Will write /proc/vmcore into raw <partition>.
.RE

.B nfs <nfs mount> | nfs4 <nfs mount> | net <nfs mount>
.RS
Will mount fs and copy /proc/vmcore to <mnt>/<path>/%HOST-%DATE/,
supports DNS. Note that a fqdn should be used as the server name in the 
mount point. By default, NFSv3 is used, nfs4 will use NFSv4. "net" is
deprecated by "nfs"
.RE

.B ssh <user@server> | net <user@server>
.RS
Will copy /proc/vmcore to <user@server>:<path>/%HOST-%DATE/ via SSH,
supports DNS. If makedumpfile is the core_collector, it is piped to
an "ssh" shell, otherwise use the specified core_collector like scp.
NOTE: make sure user has necessary write permissions on
server and that a fqdn is used as the server name. "net" is deprecated
by "ssh"
.RE

.B <fs type> <partition>
.RS
Will mount -t <fs type> <partition> /mnt and copy /proc/vmcore to
/mnt/<path>/127.0.0.1-%DATE/. Currently, the supported fs types are: ext4,
ext3, ext2, btrfs and xfs, other fs types like "auto" are not supported.
NOTE: <partition> can be a device node, label or uuid.
.RE

.B disk_timeout <seconds>
.RS
Number of seconds to wait for disks to appear prior to continue to save
dump. By default kdump waits 180 seconds for the disks to show up it
needs. This can be useful in some cases if disk never shows up (Either
because disk was removed or because kdump is waiting on wrong disk).

.RE

.B link_delay <seconds> 
.RS
Some network cards take a long time to initialize, and some spanning
tree enabled networks do not transmit user traffic for long periods
after a link state changes.  This optional parameter defines a wait
period after a link is activated in which the initramfs will wait
before attempting to transmit user data.
.RE

.B kdump_post <binary | script>
.RS
This directive allows you to run a specified
executable just after the memory dump process
terminates. The exit status from the dump process
is fed to the kdump_post executable, which can be
used to trigger different actions for success or
failure.
.PP
Note that scripts written for use with this
directive must use the /bin/hush interpreter
.RE

.B kdump_pre <binary | script>
.RS
Works just like the kdump_post directive, but instead
of running after the dump process, runs immediately
before.  Exit status of this binary is interpreted
as follows:
.PP
0 - continue with dump process as usual
.PP
non 0 - reboot/halt the system
.PP
Note that scripts written for this directive must use 
the /bin/hush interpreter
.RE

.B extra_bins <binaries | shell scripts>
.RS
This directive allows you to specify additional
binaries or shell scripts you'd like to include in
your kdump initrd. Generally only useful in
conjunction with a kdump_post binary or script that
relies on other binaries or scripts.
.RE

.B extra_modules <module(s)>
.RS
This directive allows you to specify extra kernel
modules that you want to be loaded in the kdump
initrd, typically used to set up access to
non-boot-path dump targets that might otherwise
not be accessible in the kdump environment. Multiple
modules can be listed, separated by a space, and any
dependent modules will automatically be included.
Module name should be specified without ".ko" suffix.
.RE

.B options <module> <option list>
.RS
This directive allows you to specify options to apply to 
modules in the initramfs.  This directive overrides options
specified in /etc/modprobe.conf. Module name should be specified
without ".ko" suffix.
.RE

.B blacklist <module>
.RS
The blacklist keyword indicates that all of that particular modules are
to be ignored in the initramfs. General terminology for blacklist has
been that module is present in initramfs but it is not actually loaded
in kernel. This directive can be specified multiple times or as a
space separated list.
Module name should be specified without ".ko" suffix.
.RE

.B sshkey <path>
.RS
Specifies the path of the ssh key you want to use when do ssh dump,
the default value is /root/.ssh/kdump_id_rsa.
.RE

.B default <reboot | halt | poweroff | shell | mount_root_run_init>
.RS
Action to perform in case dumping to intended target fails. If no default
action is specified, "reboot" is assumed default.

reboot: If the default action is reboot simply reboot the system (this is
what most people will want, as it returns the system to a nominal state).

halt: bring the system to a halt, requiring manual reset.

poweroff: The system will be powered down.

shell: If the default action is shell, then drop to an hush session inside
the initramfs from where you can manually perform additional recovery actions.
Exiting this shell reboots the system.

mount_root_run_init: Mount root filesystem and run init. Kdump initscript
will try to save dump to root filesystem in /var/crash dir. This will likely
require a lot more memory to be reserved for kdump kernel.
.RE

.B debug_mem_level <0-3>
.RS
Turns on debug/verbose output of kdump scripts regarding free/used memory at
various points of execution. Higher level means more debugging output.
.PP
0 - no output
.PP
1 - partial /proc/meminfo
.PP
2 - /proc/meminfo
.PP
3 - /proc/meminfo + /proc/slabinfo
.RE

.B force_rebuild <0 | 1>
.RS
By default, kdump initrd only will be rebuilt when necessary.
Specify 1 here to force rebuilding kdump initrd every time when kdump service starts.
.RE

.B fence_kdump_args <arg(s)>
.RS
Command line arguments for fence_kdump_send (it can contain all valid
arguments except hosts to send notification to).
.RE

.B fence_kdump_nodes <node(s)>
.RS
List of cluster node(s) separated by space to send fence_kdump notification
to (this option is mandatory to enable fence_kdump).
.RE

.SH EXAMPLES

see 
.I /etc/kdump.conf

.SH SEE ALSO

kexec(8) mkdumprd(8)
